{"version":3,"sources":["App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","div","Grid","Box","motion","Circle","Overlay","overlay","hidden","backgroundColor","visible","exit","App","useState","id","setId","circelClicked","setCircelClicked","onClick","layoutId","prev","AnimatePresence","variants","initial","animate","style","width","height","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"+NAIMA,EAAUC,IAAOC,IAAV,2IAQPC,EAAOF,IAAOC,IAAV,iNAYJE,EAAMH,YAAOI,IAAOH,IAAdD,CAAH,uQAUHK,EAASL,YAAOI,IAAOH,IAAdD,CAAH,mMAQNM,EAAUN,YAAOI,IAAOH,IAAdD,CAAH,0JASPO,EAAU,CACdC,OAAQ,CAAEC,gBAAiB,oBAC3BC,QAAS,CAAED,gBAAiB,sBAC5BE,KAAM,CAAEF,gBAAiB,qBAuCZG,I,EAAAA,EApCf,WACE,MAAoBC,mBAAwB,MAA5C,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA0CF,oBAAkB,GAA5D,mBAAOG,EAAP,KAAsBC,EAAtB,KAIA,OACE,eAAClB,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,CAAKe,QAAS,kBAAMH,EAAM,MAAMI,SAAU,MAC1C,cAAChB,EAAD,CAAKe,QAAS,kBAAMH,EAAM,MAAMI,SAAU,IAA1C,SACIH,EAA+C,KAA/B,cAACX,EAAD,CAAQc,SAAS,aAErC,cAAChB,EAAD,CAAKe,QAAS,kBAAMH,EAAM,MAAMI,SAAU,IAA1C,SACGH,EAAgB,cAACX,EAAD,CAAQc,SAAS,WAAc,OAElD,cAAChB,EAAD,CAAKe,QAAS,kBAAMH,EAAM,MAAMI,SAAU,MAC1C,wBAAQD,QAbQ,kBAAMD,GAAiB,SAACG,GAAD,OAAWA,MAalD,qBAEF,cAACC,EAAA,EAAD,UACGP,EACC,cAACR,EAAD,CACEgB,SAAUf,EACVW,QAAS,kBAAMH,EAAM,OACrBQ,QAAQ,SACRC,QAAQ,UACRb,KAAK,OALP,SAOE,cAACR,EAAD,CAAKgB,SAAUL,EAAIW,MAAO,CAAEC,MAAO,IAAKC,OAAQ,SAEhD,WC9ENC,EAAcC,YAAH,o9CAiEjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAeC,MC3EkB,GD2EjC,UACE,cAACL,EAAD,IACA,cAAC,EAAD,WAINM,SAASC,eAAe,W","file":"static/js/main.4bbac4bd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  width: 35vw;\r\n  gap: 10px;\r\n  button:last-child {\r\n    grid-column: span 2;\r\n    width: 60px;\r\n    height: 30px;\r\n  }\r\n`;\r\n\r\nconst Box = styled(motion.div)`\r\n  background-color: rgba(255, 255, 255, 1);\r\n  border-radius: 40px;\r\n  height: 200px;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Circle = styled(motion.div)`\r\n  background-color: #ff6b81;\r\n  border-radius: 50px;\r\n  height: 100px;\r\n  width: 100px;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst overlay = {\r\n  hidden: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\r\n  visible: { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\r\n  exit: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\r\n};\r\n\r\nfunction App() {\r\n  const [id, setId] = useState<null | string>(null);\r\n  const [circelClicked, setCircelClicked] = useState<boolean>(false);\r\n\r\n  const circleClicked = () => setCircelClicked((prev) => !prev);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        <Box onClick={() => setId(\"1\")} layoutId={\"1\"}></Box>\r\n        <Box onClick={() => setId(\"2\")} layoutId={\"2\"}>\r\n          {!circelClicked ? <Circle layoutId=\"circle\" /> : null}\r\n        </Box>\r\n        <Box onClick={() => setId(\"3\")} layoutId={\"3\"}>\r\n          {circelClicked ? <Circle layoutId=\"circle\" /> : null}\r\n        </Box>\r\n        <Box onClick={() => setId(\"4\")} layoutId={\"4\"}></Box>\r\n        <button onClick={circleClicked}>Move</button>\r\n      </Grid>\r\n      <AnimatePresence>\r\n        {id ? (\r\n          <Overlay\r\n            variants={overlay}\r\n            onClick={() => setId(null)}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            <Box layoutId={id} style={{ width: 300, height: 200 }} />\r\n          </Overlay>\r\n        ) : null}\r\n      </AnimatePresence>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color:black;\r\n  line-height: 1.2;\r\n  \r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {};\r\n"],"sourceRoot":""}